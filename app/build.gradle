import java.text.SimpleDateFormat

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

def getAppVersionCode() {
    return 200
}

def getAppVersionName() {
    def major = (int) (getAppVersionCode() / 100)
    def minor = (int) ((getAppVersionCode() % 100) / 10)

    SimpleDateFormat format = new SimpleDateFormat("yyMMdd")
    //return String.format("%s.%s.%s", major, minor, format.format(new Date(2017, 0, 4)))
    return String.format("%s.%s.%s", major, minor, format.format(new Date()))
}

def computeApkName(variant) {
    def flavorSuffix = ""
    try {
        flavorSuffix = variant.productFlavors.ext.flavorSuffix.get(0)
    }
    catch (ignored) {
    }
    return String.format("pwt-%s%s.apk", getAppVersionName(), flavorSuffix)
}


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.mk.pregnancyweighttracker"
        minSdkVersion 16
        targetSdkVersion 23
        multiDexEnabled true
        versionCode getAppVersionCode()
        versionName getAppVersionName()
    }

    signingConfigs {
        release {
            storeFile file("FamilyWeightTracker.jks")
            storePassword ""
            keyAlias "MeenalkumarSubhashValhekar"
            keyPassword ""
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        dev {
            ext.flavorSuffix = "-dev"
        }
        prod {
            ext.flavorSuffix = ""
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent, computeApkName(variant))
        }

        variant.assemble.doLast {
            variant.outputs.each { output ->
                println "aligned " + output.outputFile
                println "unaligned " + output.packageApplication.outputFile

                File unaligned = output.packageApplication.outputFile;
                File aligned = output.outputFile
                if (!unaligned.getName().equalsIgnoreCase(aligned.getName())) {
                    println "deleting " + unaligned.getName()
                    unaligned.delete()
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:cardview-v7:23.1.1'
    compile 'com.github.PhilJay:MPAndroidChart:v2.2.3'
    compile 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') { transitive = true; }
    compile 'com.google.android.gms:play-services-analytics:9.0.0'
    compile 'org.jsoup:jsoup:1.8.3'
    compile 'net.danlew:android.joda:2.9.5.1'
}
